:root {
  --bcc-color-0: light-dark(oklch(1 0.1 0), oklch(0.4 0.1 0));
  --bcc-color-1: light-dark(oklch(1 0.1 50), oklch(0.4 0.1 50));
  --bcc-color-2: light-dark(oklch(1 0.1 100), oklch(0.4 0.1 100));
  --bcc-color-3: light-dark(oklch(1 0.1 150), oklch(0.4 0.1 150));
  --bcc-color-4: light-dark(oklch(1 0.1 200), oklch(0.4 0.1 200));
  --bcc-color-5: light-dark(oklch(1 0.1 250), oklch(0.4 0.1 250));
  --bcc-color-6: light-dark(oklch(1 0.1 300), oklch(0.4 0.1 300));

  color-scheme: light dark;
}

* {
  box-sizing: border-box;
  margin: unset;
  padding: unset;
  background: unset;
  border: unset;
  color: inherit;
  font: inherit;
}

body {
  background-color: canvas;
  color: canvastext;
  font: normal 14px/1 ui-monospace, monospace;
}

form {
  display: flex;
  flex-flow: column;
  gap: 1em;
  padding: 3em;
}

fieldset {
  counter-reset: options;
  display: flex;
  flex-flow: column;
  align-items: start;
  gap: 1em;
}

label {
  counter-increment: options;
  display: inline-flex;
  align-items: center;
  gap: 0.25em;
  padding: 0.25ch;
  border-radius: 0.25em;
  text-transform: lowercase;

  &::before {
    content: '[';
    display: block;
    width: 4.5ch;
    text-align: end;
  }

  &::after {
    content: ']';
  }

  &:has([type="checkbox"]) {
    cursor: pointer;
    user-select: none;
  }

  :has(#showIdsInput:checked) &::before {
    content: counter(options) '. [';
  }

  :has(#showHighlightsInput:checked) & {
    &:nth-child(1) {
      background-color: var(--bcc-color-1);
    }

    &:nth-child(2) {
      background-color: var(--bcc-color-3);
    }
  }
}

input[type="checkbox"] {
  appearance: none;
  display: grid;
  place-content: center;
  aspect-ratio: 1 / 1;
  width: 1em;
  border-block-end: 1px solid;

  &::after {
    content: '\00a0';
  }

  &:checked::after {
    content: '\2713';
  }
}

footer {
  display: flex;
  gap: 1ch;
  align-items: baseline;
}

button {
  display: flex;
  align-items: center;
  gap: 0.25em;
  padding: 0.5em;
  background-color: var(--bcc-color-5);
  border-radius: 0.25em;
  cursor: pointer;
  user-select: none;
  text-transform: lowercase;

  &::before {
    content: '[';
  }

  &::after {
    content: ']';
  }
}

output {
  color: color-mix(in srgb, currentcolor, var(--bcc-color-3) 30%);
}
